pipeline {
    agent any
    stages {
      stage('Node')
      {
        agent {
          docker {
                  image 'node:lts-buster-slim'
                  args '-p 3000:3000'
              }
            }
            stages{
              stage('Installation') {
                  steps {
                      sh 'npm i'
                  }
              }
              stage('Run test'){
                steps{
                  sh 'npm run test'
                }
              }
            }
        }
          stage('Build image')
          {
            steps{
              script{
                def dockerHome = tool 'docker'
                env.PATH = "${dockerHome}/bin:${env.PATH}"
                sh 'docker build --build-arg CLIENT_ID=79ccc48a450cd4e391a8 -t takenote:mytag .'
                withCredentials([usernamePassword(credentialsId: 'DockerHubAccount', usernameVariable: 'USERNAME',\
                passwordVariable: 'PASSWORD')]) {
                sh "docker login -u ${USERNAME} -p ${PASSWORD}"
                sh "docker tag takenote:mytag mmaaasshhaaaaa/takenote:latest"
                sh "docker push mmaaasshhaaaaa/takenote:latest"
                echo "Image push complete"
               }
            }
          }
        }
      }
      post {
        always {
              emailext body: "${currentBuild.currentResult}: Job ${env.JOB_NAME} build ${env.BUILD_NUMBER}\n More info at: ${env.BUILD_URL}",
              recipientProviders: [[$class: 'DevelopersRecipientProvider'], [$class: 'RequesterRecipientProvider']],
              subject: "Jenkins Build ${currentBuild.currentResult}: Job ${env.JOB_NAME}"
        }
    }
  }
